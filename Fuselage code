#Author - Liam Watson
#created 11/11/2017


from PySide import QtCore, QtGui
from PySide.QtGui import QLineEdit, QRadioButton
import FreeCAD, FreeCADGui, Draft
import math

App.newDocument("Skylon")
App.setActiveDocument("Skylon")
App.ActiveDocument = App.getDocument("Skylon")
Gui.ActiveDocument = Gui.getDocument("Skylon")

#define the radius of the fuselage at cargo bay
r_cargo = 6
#define the length of the fusselage at max 'r'
l_aircraft = 36
#define the maximum angle of attack at takeoff in degrees
a_takeoff=25
#height of tail above horizontal datum
h=(math.tan(math.radians(a_takeoff))*22)/2
#radius of fuselage exhaust
r_exhaust_f = 0.5

#creating first cirlce for the fuselage at cargo bay
App.activeDocument().addObject('Sketcher::SketchObject','Cargo1')
App.activeDocument().Cargo1.Placement = App.Placement(App.Vector(0.000000,0.000000,l_aircraft/2),App.Rotation(0.000000,0.000000,0.000000,1.000000))
App.ActiveDocument.Cargo1.addGeometry(Part.Circle(App.Vector(0.000000,0.000000,0.000000),App.Vector(0,0,1),r_cargo),False)

#creating second cirlce for the fuselage at cargo bay
App.activeDocument().addObject('Sketcher::SketchObject','Cargo2')
App.activeDocument().Cargo2.Placement = App.Placement(App.Vector(0.000000,0.000000,0),App.Rotation(0.000000,0.000000,0.000000,1.000000))
App.ActiveDocument.Cargo2.addGeometry(Part.Circle(App.Vector(0.000000,0.000000,0.000000),App.Vector(0,0,1),r_cargo),False)

#creating second cirlce for the fuselage at cargo bay
App.activeDocument().addObject('Sketcher::SketchObject','Cargo3')
App.activeDocument().Cargo3.Placement = App.Placement(App.Vector(0.000000,0.000000,-l_aircraft/2),App.Rotation(0.000000,0.000000,0.000000,1.000000))
App.ActiveDocument.Cargo3.addGeometry(Part.Circle(App.Vector(0.000000,0.000000,0.000000),App.Vector(0,0,1),r_cargo),False)

#creating nose of the aircraft
App.activeDocument().addObject('Sketcher::SketchObject','nose')
App.activeDocument().nose.Placement = App.Placement(App.Vector(0.000000,0.000000,l_aircraft+22),App.Rotation(0.000000,0.000000,0.000000,1.000000))
App.ActiveDocument.nose.addGeometry(Part.Circle(App.Vector(0.000000,0.000000,0.000000),App.Vector(0,0,1),0.000001),False)

#creating tail of the aircraft
App.activeDocument().addObject('Sketcher::SketchObject','tail')
App.activeDocument().tail.Placement = App.Placement(App.Vector(0.000000,h,-l_aircraft-22),App.Rotation(0.000000,0.000000,0.000000,1.000000))
App.ActiveDocument.tail.addGeometry(Part.Circle(App.Vector(0.000000,0.000000,0.000000),App.Vector(0,0,1),r_exhaust_f),False)

#recomputing the document
App.ActiveDocument.recompute


#lofting from nose to tail
from FreeCAD import Base
import Part
App.getDocument('Skylon').addObject('Part::Loft','Loft')
App.getDocument('Skylon').ActiveObject.Sections=[App.getDocument('Skylon').nose, App.getDocument('Skylon').Cargo1, App.getDocument('Skylon').Cargo2, App.getDocument('Skylon').Cargo3, App.getDocument('Skylon').tail, ]
App.getDocument('Skylon').ActiveObject.Solid=True
App.getDocument('Skylon').ActiveObject.Ruled=False
App.getDocument('Skylon').ActiveObject.Closed=False


App.ActiveDocument.recompute
